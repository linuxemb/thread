The Doctors Office Problem

Using the QNX Neutrino API's described in our programmer's guide write
a program (non-compilation is ok, we want the gist of the logic and the appropriate
APIs) that implements the following Doctors Office scenario.

The Doctors office problem is as follows:

We have a hypothetical doctor's office where all the doctors are sleepy. Each doctor 
has his own exam room. Each doctor will treat a patient, dismiss them then go to the 
waiting room to see if there are more patients waiting. If there are, he brings one
to his exam room and treats them. If there are no more patients he returns to his
exam room and naps.

Upon the arrival of a patient they will look to see if there is an available doctor (is one sleeping).
If the doctor is sleeping, then patient must wake them up and get treated. If the doctors are busy then
the patient will go to the waiting room and wait if there is a free waiting room chair. If there is no
room for them to wait they will leave.

Each doctor will be represented by a "doctors thread" and each patient will be represented by a
"patient thread". Each doctor will treat a patient for 4 to 8 seconds, and patients will arrive 
at the office between every 1 to 5 seconds. You must ensure there is synchronization between the 
doctors and patients to ensure doctors are not trying to treat the same patient, that doctors
aren't sleeping when patients need to be seen and that each doctor shares the work not just one doctor treating all
patients. You should also ensure that patients are seen on a first come first served basis (FIFO).

The amount of doctors, total patients and number of waiting room chairs will be specified through
command line option so be sure your solution can handle different ratios of doctors, patients and chairs.

Please include log messages to track the activity of your doctor's office.

You should likely be able to write code that will compile without problem on any
standard unix system with a POSIX interface (ie Linux) but as I indicated, compilation
is not as important as the data structure design and how the doctors and patients are
synchronized with one another.

A stub is provided for you to start with in the file answer.c

*************************************************************************************

As general resources, the you may want to download a 30 day trial version of QNX host 
development tools and ‘VMWare’ target for developing/testing solutions.  It is not 
mandatory to build and test the code but you may find it easier to work through the 
solutions.

http://www.qnx.com/products/evaluation/

The may also find it useful to download some of the relevant documentation
- QNX Neutrino Programmer’s Guide [neutrino_prog_guide.pdf]
- QNX Neutrino C Library Reference [neutrino_lib_ref.pdf]
- Getting Started with QNX Neutrino [getting_started.pdf] 

http://www.qnx.com/download/group.html?programid=20945